apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: deploy-app-template
  title: Deploy Application Template
  description: Template for deploying applications using OpenShift pipelines in multiple namespaces.
spec:
  owner: backstage/dev-hub-team
  type: service

  parameters:
    - title: Application Details
      required:
        - appName
        - pvcName
        - configMapName
      properties:
        appName:
          title: Application Name
          type: string
          description: Unique name of the application to deploy
          ui:autofocus: true
          ui:options:
            rows: 1
        pvcName:
          title: PVC Name
          type: string
          description: Name of the Persistent Volume Claim to use
          ui:options:
            rows: 1
        configMapName:
          title: ConfigMap Name
          type: string
          description: Name of the ConfigMap to use
          ui:options:
            rows: 1

    - title: Choose a Repository
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

    - title: Select Namespace
      required:
        - namespace
      properties:
        namespace:
          title: Namespace
          type: string
          description: Namespace where the application will be deployed
          ui:options:
            rows: 1

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          appName: ${{ parameters.appName }}
          pvcName: ${{ parameters.pvcName }}
          configMapName: ${{ parameters.configMapName }}
          namespace: ${{ parameters.namespace }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['fetch-base'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
